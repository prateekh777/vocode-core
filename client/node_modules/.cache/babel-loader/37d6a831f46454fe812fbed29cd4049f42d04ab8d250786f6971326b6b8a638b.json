{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/My Code/Vocode-voice-API/client/src/components/ConversationInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\n\n// Get the server URL from environment variable or use localhost as fallback\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:8000';\nconsole.log('Using server URL:', SERVER_URL);\n\n// Determine if we should use secure WebSockets based on the URL\nconst useSecureWebsocket = SERVER_URL.startsWith('https');\nconst ConversationInterface = () => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const socketRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  useEffect(() => {\n    // Test the connection to the server\n    console.log(`Testing connection to ${SERVER_URL}/test-cors`);\n    fetch(`${SERVER_URL}/test-cors`).then(response => response.json()).then(data => {\n      console.log('Server connection test successful:', data);\n    }).catch(error => {\n      console.error('Server connection test failed:', error);\n    });\n\n    // Cleanup function\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (mediaStreamRef.current) {\n        mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n\n  // Add a function to handle connection errors and reconnection\n  const handleSocketError = err => {\n    console.error('Socket connection error:', err);\n    setError(`Connection error: ${err.message || 'Unknown error'}`);\n\n    // Attempt to reconnect after a delay\n    setTimeout(() => {\n      if (socketRef.current) {\n        console.log('Attempting to reconnect...');\n        socketRef.current.connect();\n      }\n    }, 3000);\n  };\n  const startConversation = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log(`Initializing Socket.IO connection to ${SERVER_URL}`);\n      console.log(`Using secure WebSocket: ${useSecureWebsocket}`);\n\n      // Initialize Socket.IO connection with explicit configuration\n      socketRef.current = io(SERVER_URL, {\n        transports: ['websocket'],\n        forceNew: true,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 2000,\n        timeout: 5000,\n        withCredentials: false,\n        // Change to false for cross-domain requests to Render\n        autoConnect: true,\n        path: '/socket.io',\n        secure: useSecureWebsocket\n      });\n      console.log('Socket.IO instance created:', socketRef.current);\n\n      // Handle socket events\n      socketRef.current.on('connect', () => {\n        var _socketRef$current;\n        console.log('Connected to server with ID:', (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.id);\n        setIsLoading(false);\n        setError(null);\n      });\n      socketRef.current.on('connect_error', err => {\n        console.error('Socket connect_error:', err);\n        handleSocketError(err);\n      });\n      socketRef.current.on('connect_timeout', () => {\n        console.error('Socket connect_timeout');\n        handleSocketError(new Error('Connection timeout'));\n      });\n      socketRef.current.on('connection_established', data => {\n        console.log('Connection established with data:', data);\n      });\n      socketRef.current.on('conversation_started', data => {\n        if (data.status === 'success') {\n          setIsActive(true);\n          startAudioStream();\n        }\n      });\n      socketRef.current.on('audio_response', audioData => {\n        playAudioResponse(audioData);\n      });\n      socketRef.current.on('error', data => {\n        setError(data.message);\n        stopConversation();\n      });\n      socketRef.current.on('disconnect', reason => {\n        console.log('Disconnected from server. Reason:', reason);\n        setError(`Disconnected from server: ${reason}`);\n        setIsActive(false);\n      });\n\n      // Start the conversation\n      socketRef.current.emit('start_conversation');\n    } catch (err) {\n      setError('Error connecting to server');\n      console.error('Error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const startAudioStream = async () => {\n    try {\n      // Get microphone access\n      mediaStreamRef.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      audioContextRef.current = new AudioContext();\n      const source = audioContextRef.current.createMediaStreamSource(mediaStreamRef.current);\n      const processor = audioContextRef.current.createScriptProcessor(1024, 1, 1);\n      source.connect(processor);\n      processor.connect(audioContextRef.current.destination);\n      processor.onaudioprocess = e => {\n        if (socketRef.current && socketRef.current.connected) {\n          const audioData = e.inputBuffer.getChannelData(0);\n          // Convert Float32Array to regular array for better compatibility\n          const audioDataArray = Array.from(audioData);\n          socketRef.current.emit('audio_data', audioDataArray);\n        }\n      };\n    } catch (err) {\n      setError('Error accessing microphone');\n      console.error('Microphone error:', err);\n      stopConversation();\n    }\n  };\n  const playAudioResponse = audioData => {\n    if (!audioContextRef.current) return;\n    try {\n      // Handle different types of audio data\n      let audioBuffer;\n      if (audioData instanceof ArrayBuffer) {\n        audioBuffer = audioData;\n      } else if (audioData instanceof Uint8Array) {\n        // Create a new ArrayBuffer and copy the data\n        audioBuffer = audioData.buffer.slice(0);\n      } else if (Array.isArray(audioData)) {\n        // Convert array to Float32Array\n        const float32Array = new Float32Array(audioData);\n        audioBuffer = float32Array.buffer;\n      } else {\n        console.error('Unsupported audio data format:', typeof audioData);\n        return;\n      }\n      audioContextRef.current.decodeAudioData(audioBuffer, decodedBuffer => {\n        const source = audioContextRef.current.createBufferSource();\n        source.buffer = decodedBuffer;\n        source.connect(audioContextRef.current.destination);\n        source.start(0);\n      }, err => {\n        console.error('Error decoding audio data:', err);\n      });\n    } catch (err) {\n      console.error('Error playing audio response:', err);\n    }\n  };\n  const stopConversation = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('end_conversation');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    }\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      mediaStreamRef.current = null;\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    setIsActive(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto bg-white rounded-lg shadow-lg overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n            children: isActive ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-50 text-red-700 rounded-md text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isActive ? stopConversation : startConversation,\n          disabled: isLoading,\n          className: `w-full flex items-center justify-center px-4 py-3 border border-transparent text-base font-medium rounded-md text-white ${isActive ? 'bg-red-600 hover:bg-red-700' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 ${isActive ? 'focus:ring-red-500' : 'focus:ring-indigo-500'} ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"animate-spin h-5 w-5 text-white\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: isActive ? 'Stop Conversation' : 'Start Conversation'\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationInterface, \"SKTC/s7qkAbs7BufgdhmPTrvMAw=\");\n_c = ConversationInterface;\nexport default ConversationInterface;\nvar _c;\n$RefreshReg$(_c, \"ConversationInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_URL","process","env","REACT_APP_SERVER_URL","console","log","useSecureWebsocket","startsWith","ConversationInterface","_s","isActive","setIsActive","isLoading","setIsLoading","error","setError","socketRef","mediaStreamRef","audioContextRef","fetch","then","response","json","data","catch","current","disconnect","getTracks","forEach","track","stop","close","handleSocketError","err","message","setTimeout","connect","startConversation","transports","forceNew","reconnection","reconnectionAttempts","reconnectionDelay","timeout","withCredentials","autoConnect","path","secure","on","_socketRef$current","id","Error","status","startAudioStream","audioData","playAudioResponse","stopConversation","reason","emit","navigator","mediaDevices","getUserMedia","audio","AudioContext","source","createMediaStreamSource","processor","createScriptProcessor","destination","onaudioprocess","e","connected","inputBuffer","getChannelData","audioDataArray","Array","from","audioBuffer","ArrayBuffer","Uint8Array","buffer","slice","isArray","float32Array","Float32Array","decodeAudioData","decodedBuffer","createBufferSource","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Volumes/Data/My Code/Vocode-voice-API/client/src/components/ConversationInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MicrophoneIcon, StopIcon } from '@heroicons/react/24/solid';\nimport { io, Socket } from 'socket.io-client';\n\n// Get the server URL from environment variable or use localhost as fallback\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || 'http://localhost:8000';\nconsole.log('Using server URL:', SERVER_URL);\n\n// Determine if we should use secure WebSockets based on the URL\nconst useSecureWebsocket = SERVER_URL.startsWith('https');\n\nconst ConversationInterface: React.FC = () => {\n  const [isActive, setIsActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const socketRef = useRef<Socket | null>(null);\n  const mediaStreamRef = useRef<MediaStream | null>(null);\n  const audioContextRef = useRef<AudioContext | null>(null);\n\n  useEffect(() => {\n    // Test the connection to the server\n    console.log(`Testing connection to ${SERVER_URL}/test-cors`);\n    fetch(`${SERVER_URL}/test-cors`)\n      .then(response => response.json())\n      .then(data => {\n        console.log('Server connection test successful:', data);\n      })\n      .catch(error => {\n        console.error('Server connection test failed:', error);\n      });\n\n    // Cleanup function\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (mediaStreamRef.current) {\n        mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n\n  // Add a function to handle connection errors and reconnection\n  const handleSocketError = (err: any) => {\n    console.error('Socket connection error:', err);\n    setError(`Connection error: ${err.message || 'Unknown error'}`);\n    \n    // Attempt to reconnect after a delay\n    setTimeout(() => {\n      if (socketRef.current) {\n        console.log('Attempting to reconnect...');\n        socketRef.current.connect();\n      }\n    }, 3000);\n  };\n\n  const startConversation = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      console.log(`Initializing Socket.IO connection to ${SERVER_URL}`);\n      console.log(`Using secure WebSocket: ${useSecureWebsocket}`);\n      \n      // Initialize Socket.IO connection with explicit configuration\n      socketRef.current = io(SERVER_URL, {\n        transports: ['websocket'],\n        forceNew: true,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 2000,\n        timeout: 5000,\n        withCredentials: false, // Change to false for cross-domain requests to Render\n        autoConnect: true,\n        path: '/socket.io',\n        secure: useSecureWebsocket\n      });\n\n      console.log('Socket.IO instance created:', socketRef.current);\n\n      // Handle socket events\n      socketRef.current.on('connect', () => {\n        console.log('Connected to server with ID:', socketRef.current?.id);\n        setIsLoading(false);\n        setError(null);\n      });\n\n      socketRef.current.on('connect_error', (err) => {\n        console.error('Socket connect_error:', err);\n        handleSocketError(err);\n      });\n\n      socketRef.current.on('connect_timeout', () => {\n        console.error('Socket connect_timeout');\n        handleSocketError(new Error('Connection timeout'));\n      });\n\n      socketRef.current.on('connection_established', (data) => {\n        console.log('Connection established with data:', data);\n      });\n\n      socketRef.current.on('conversation_started', (data) => {\n        if (data.status === 'success') {\n          setIsActive(true);\n          startAudioStream();\n        }\n      });\n\n      socketRef.current.on('audio_response', (audioData) => {\n        playAudioResponse(audioData);\n      });\n\n      socketRef.current.on('error', (data) => {\n        setError(data.message);\n        stopConversation();\n      });\n\n      socketRef.current.on('disconnect', (reason) => {\n        console.log('Disconnected from server. Reason:', reason);\n        setError(`Disconnected from server: ${reason}`);\n        setIsActive(false);\n      });\n\n      // Start the conversation\n      socketRef.current.emit('start_conversation');\n    } catch (err) {\n      setError('Error connecting to server');\n      console.error('Error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const startAudioStream = async () => {\n    try {\n      // Get microphone access\n      mediaStreamRef.current = await navigator.mediaDevices.getUserMedia({ audio: true });\n      audioContextRef.current = new AudioContext();\n\n      const source = audioContextRef.current.createMediaStreamSource(mediaStreamRef.current);\n      const processor = audioContextRef.current.createScriptProcessor(1024, 1, 1);\n\n      source.connect(processor);\n      processor.connect(audioContextRef.current.destination);\n\n      processor.onaudioprocess = (e) => {\n        if (socketRef.current && socketRef.current.connected) {\n          const audioData = e.inputBuffer.getChannelData(0);\n          // Convert Float32Array to regular array for better compatibility\n          const audioDataArray = Array.from(audioData);\n          socketRef.current.emit('audio_data', audioDataArray);\n        }\n      };\n    } catch (err) {\n      setError('Error accessing microphone');\n      console.error('Microphone error:', err);\n      stopConversation();\n    }\n  };\n\n  const playAudioResponse = (audioData: any) => {\n    if (!audioContextRef.current) return;\n    \n    try {\n      // Handle different types of audio data\n      let audioBuffer: ArrayBuffer;\n      \n      if (audioData instanceof ArrayBuffer) {\n        audioBuffer = audioData;\n      } else if (audioData instanceof Uint8Array) {\n        // Create a new ArrayBuffer and copy the data\n        audioBuffer = audioData.buffer.slice(0) as ArrayBuffer;\n      } else if (Array.isArray(audioData)) {\n        // Convert array to Float32Array\n        const float32Array = new Float32Array(audioData);\n        audioBuffer = float32Array.buffer as ArrayBuffer;\n      } else {\n        console.error('Unsupported audio data format:', typeof audioData);\n        return;\n      }\n      \n      audioContextRef.current.decodeAudioData(audioBuffer, (decodedBuffer) => {\n        const source = audioContextRef.current!.createBufferSource();\n        source.buffer = decodedBuffer;\n        source.connect(audioContextRef.current!.destination);\n        source.start(0);\n      }, (err) => {\n        console.error('Error decoding audio data:', err);\n      });\n    } catch (err) {\n      console.error('Error playing audio response:', err);\n    }\n  };\n\n  const stopConversation = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('end_conversation');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    }\n\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      mediaStreamRef.current = null;\n    }\n\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n\n    setIsActive(false);\n  };\n\n  return (\n    <div className=\"mt-10\">\n      <div className=\"max-w-md mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\n        <div className=\"px-6 py-8\">\n          <div className=\"flex items-center justify-center mb-6\">\n            <span\n              className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n              }`}\n            >\n              {isActive ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n              {error}\n            </div>\n          )}\n\n          <button\n            onClick={isActive ? stopConversation : startConversation}\n            disabled={isLoading}\n            className={`w-full flex items-center justify-center px-4 py-3 border border-transparent text-base font-medium rounded-md text-white ${\n              isActive\n                ? 'bg-red-600 hover:bg-red-700'\n                : 'bg-indigo-600 hover:bg-indigo-700'\n            } focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n              isActive ? 'focus:ring-red-500' : 'focus:ring-indigo-500'\n            } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            {isLoading ? (\n              <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n            ) : (\n              <>\n                {isActive ? 'Stop Conversation' : 'Start Conversation'}\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConversationInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}