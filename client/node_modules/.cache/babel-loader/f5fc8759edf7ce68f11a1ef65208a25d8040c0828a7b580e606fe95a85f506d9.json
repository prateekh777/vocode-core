{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/My Code/Vocode-voice-API/client/src/components/ConversationInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConversationInterface = () => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const socketRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  useEffect(() => {\n    // Cleanup function\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (mediaStreamRef.current) {\n        mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n\n  // Add a function to handle connection errors and reconnection\n  const handleSocketError = err => {\n    console.error('Socket connection error:', err);\n    setError(`Connection error: ${err.message || 'Unknown error'}`);\n\n    // Attempt to reconnect after a delay\n    setTimeout(() => {\n      if (socketRef.current) {\n        console.log('Attempting to reconnect...');\n        socketRef.current.connect();\n      }\n    }, 3000);\n  };\n  const startConversation = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Initialize Socket.IO connection with explicit configuration\n      socketRef.current = io('http://localhost:8000', {\n        transports: ['polling', 'websocket'],\n        forceNew: true,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        timeout: 20000,\n        withCredentials: false\n      });\n\n      // Handle socket events\n      socketRef.current.on('connect', () => {\n        console.log('Connected to server');\n      });\n      socketRef.current.on('connect_error', err => {\n        handleSocketError(err);\n      });\n      socketRef.current.on('connect_timeout', () => {\n        handleSocketError(new Error('Connection timeout'));\n      });\n      socketRef.current.on('connection_established', data => {\n        console.log('Connection established:', data);\n      });\n      socketRef.current.on('conversation_started', data => {\n        if (data.status === 'success') {\n          setIsActive(true);\n          startAudioStream();\n        }\n      });\n      socketRef.current.on('audio_response', audioData => {\n        playAudioResponse(audioData);\n      });\n      socketRef.current.on('error', data => {\n        setError(data.message);\n        stopConversation();\n      });\n      socketRef.current.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setError('Disconnected from server');\n        setIsActive(false);\n      });\n\n      // Start the conversation\n      socketRef.current.emit('start_conversation');\n    } catch (err) {\n      setError('Error connecting to server');\n      console.error('Error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const startAudioStream = async () => {\n    try {\n      // Get microphone access\n      mediaStreamRef.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      audioContextRef.current = new AudioContext();\n      const source = audioContextRef.current.createMediaStreamSource(mediaStreamRef.current);\n      const processor = audioContextRef.current.createScriptProcessor(1024, 1, 1);\n      source.connect(processor);\n      processor.connect(audioContextRef.current.destination);\n      processor.onaudioprocess = e => {\n        if (socketRef.current && socketRef.current.connected) {\n          const audioData = e.inputBuffer.getChannelData(0);\n          // Convert Float32Array to regular array for better compatibility\n          const audioDataArray = Array.from(audioData);\n          socketRef.current.emit('audio_data', audioDataArray);\n        }\n      };\n    } catch (err) {\n      setError('Error accessing microphone');\n      console.error('Microphone error:', err);\n      stopConversation();\n    }\n  };\n  const playAudioResponse = audioData => {\n    if (!audioContextRef.current) return;\n    try {\n      // Handle different types of audio data\n      let buffer;\n      if (audioData instanceof ArrayBuffer) {\n        buffer = audioData;\n      } else if (audioData instanceof Uint8Array) {\n        buffer = audioData.buffer;\n      } else if (Array.isArray(audioData)) {\n        // Convert array to Float32Array\n        const float32Array = new Float32Array(audioData);\n        buffer = float32Array.buffer;\n      } else {\n        console.error('Unsupported audio data format:', typeof audioData);\n        return;\n      }\n      audioContextRef.current.decodeAudioData(buffer, decodedBuffer => {\n        const source = audioContextRef.current.createBufferSource();\n        source.buffer = decodedBuffer;\n        source.connect(audioContextRef.current.destination);\n        source.start(0);\n      }, err => {\n        console.error('Error decoding audio data:', err);\n      });\n    } catch (err) {\n      console.error('Error playing audio response:', err);\n    }\n  };\n  const stopConversation = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('end_conversation');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    }\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      mediaStreamRef.current = null;\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    setIsActive(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto bg-white rounded-lg shadow-lg overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n            children: isActive ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-3 bg-red-50 text-red-700 rounded-md text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isActive ? stopConversation : startConversation,\n          disabled: isLoading,\n          className: `w-full flex items-center justify-center px-4 py-3 border border-transparent text-base font-medium rounded-md text-white ${isActive ? 'bg-red-600 hover:bg-red-700' : 'bg-indigo-600 hover:bg-indigo-700'} focus:outline-none focus:ring-2 focus:ring-offset-2 ${isActive ? 'focus:ring-red-500' : 'focus:ring-indigo-500'} ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"animate-spin h-5 w-5 text-white\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              className: \"opacity-25\",\n              cx: \"12\",\n              cy: \"12\",\n              r: \"10\",\n              stroke: \"currentColor\",\n              strokeWidth: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"opacity-75\",\n              fill: \"currentColor\",\n              d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: isActive ? 'Stop Conversation' : 'Start Conversation'\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(ConversationInterface, \"SKTC/s7qkAbs7BufgdhmPTrvMAw=\");\n_c = ConversationInterface;\nexport default ConversationInterface;\nvar _c;\n$RefreshReg$(_c, \"ConversationInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","ConversationInterface","_s","isActive","setIsActive","isLoading","setIsLoading","error","setError","socketRef","mediaStreamRef","audioContextRef","current","disconnect","getTracks","forEach","track","stop","close","handleSocketError","err","console","message","setTimeout","log","connect","startConversation","transports","forceNew","reconnection","reconnectionAttempts","reconnectionDelay","timeout","withCredentials","on","Error","data","status","startAudioStream","audioData","playAudioResponse","stopConversation","emit","navigator","mediaDevices","getUserMedia","audio","AudioContext","source","createMediaStreamSource","processor","createScriptProcessor","destination","onaudioprocess","e","connected","inputBuffer","getChannelData","audioDataArray","Array","from","buffer","ArrayBuffer","Uint8Array","isArray","float32Array","Float32Array","decodeAudioData","decodedBuffer","createBufferSource","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","_c","$RefreshReg$"],"sources":["/Volumes/Data/My Code/Vocode-voice-API/client/src/components/ConversationInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MicrophoneIcon, StopIcon } from '@heroicons/react/24/solid';\nimport { io, Socket } from 'socket.io-client';\n\nconst ConversationInterface: React.FC = () => {\n  const [isActive, setIsActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const socketRef = useRef<Socket | null>(null);\n  const mediaStreamRef = useRef<MediaStream | null>(null);\n  const audioContextRef = useRef<AudioContext | null>(null);\n\n  useEffect(() => {\n    // Cleanup function\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      if (mediaStreamRef.current) {\n        mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, []);\n\n  // Add a function to handle connection errors and reconnection\n  const handleSocketError = (err: any) => {\n    console.error('Socket connection error:', err);\n    setError(`Connection error: ${err.message || 'Unknown error'}`);\n    \n    // Attempt to reconnect after a delay\n    setTimeout(() => {\n      if (socketRef.current) {\n        console.log('Attempting to reconnect...');\n        socketRef.current.connect();\n      }\n    }, 3000);\n  };\n\n  const startConversation = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Initialize Socket.IO connection with explicit configuration\n      socketRef.current = io('http://localhost:8000', {\n        transports: ['polling', 'websocket'],\n        forceNew: true,\n        reconnection: true,\n        reconnectionAttempts: 5,\n        reconnectionDelay: 1000,\n        timeout: 20000,\n        withCredentials: false\n      });\n\n      // Handle socket events\n      socketRef.current.on('connect', () => {\n        console.log('Connected to server');\n      });\n\n      socketRef.current.on('connect_error', (err) => {\n        handleSocketError(err);\n      });\n\n      socketRef.current.on('connect_timeout', () => {\n        handleSocketError(new Error('Connection timeout'));\n      });\n\n      socketRef.current.on('connection_established', (data) => {\n        console.log('Connection established:', data);\n      });\n\n      socketRef.current.on('conversation_started', (data) => {\n        if (data.status === 'success') {\n          setIsActive(true);\n          startAudioStream();\n        }\n      });\n\n      socketRef.current.on('audio_response', (audioData) => {\n        playAudioResponse(audioData);\n      });\n\n      socketRef.current.on('error', (data) => {\n        setError(data.message);\n        stopConversation();\n      });\n\n      socketRef.current.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setError('Disconnected from server');\n        setIsActive(false);\n      });\n\n      // Start the conversation\n      socketRef.current.emit('start_conversation');\n    } catch (err) {\n      setError('Error connecting to server');\n      console.error('Error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const startAudioStream = async () => {\n    try {\n      // Get microphone access\n      mediaStreamRef.current = await navigator.mediaDevices.getUserMedia({ audio: true });\n      audioContextRef.current = new AudioContext();\n\n      const source = audioContextRef.current.createMediaStreamSource(mediaStreamRef.current);\n      const processor = audioContextRef.current.createScriptProcessor(1024, 1, 1);\n\n      source.connect(processor);\n      processor.connect(audioContextRef.current.destination);\n\n      processor.onaudioprocess = (e) => {\n        if (socketRef.current && socketRef.current.connected) {\n          const audioData = e.inputBuffer.getChannelData(0);\n          // Convert Float32Array to regular array for better compatibility\n          const audioDataArray = Array.from(audioData);\n          socketRef.current.emit('audio_data', audioDataArray);\n        }\n      };\n    } catch (err) {\n      setError('Error accessing microphone');\n      console.error('Microphone error:', err);\n      stopConversation();\n    }\n  };\n\n  const playAudioResponse = (audioData: any) => {\n    if (!audioContextRef.current) return;\n    \n    try {\n      // Handle different types of audio data\n      let buffer: ArrayBuffer;\n      \n      if (audioData instanceof ArrayBuffer) {\n        buffer = audioData;\n      } else if (audioData instanceof Uint8Array) {\n        buffer = audioData.buffer;\n      } else if (Array.isArray(audioData)) {\n        // Convert array to Float32Array\n        const float32Array = new Float32Array(audioData);\n        buffer = float32Array.buffer;\n      } else {\n        console.error('Unsupported audio data format:', typeof audioData);\n        return;\n      }\n      \n      audioContextRef.current.decodeAudioData(buffer, (decodedBuffer) => {\n        const source = audioContextRef.current!.createBufferSource();\n        source.buffer = decodedBuffer;\n        source.connect(audioContextRef.current!.destination);\n        source.start(0);\n      }, (err) => {\n        console.error('Error decoding audio data:', err);\n      });\n    } catch (err) {\n      console.error('Error playing audio response:', err);\n    }\n  };\n\n  const stopConversation = () => {\n    if (socketRef.current) {\n      socketRef.current.emit('end_conversation');\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    }\n\n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      mediaStreamRef.current = null;\n    }\n\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n\n    setIsActive(false);\n  };\n\n  return (\n    <div className=\"mt-10\">\n      <div className=\"max-w-md mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\n        <div className=\"px-6 py-8\">\n          <div className=\"flex items-center justify-center mb-6\">\n            <span\n              className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n              }`}\n            >\n              {isActive ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n              {error}\n            </div>\n          )}\n\n          <button\n            onClick={isActive ? stopConversation : startConversation}\n            disabled={isLoading}\n            className={`w-full flex items-center justify-center px-4 py-3 border border-transparent text-base font-medium rounded-md text-white ${\n              isActive\n                ? 'bg-red-600 hover:bg-red-700'\n                : 'bg-indigo-600 hover:bg-indigo-700'\n            } focus:outline-none focus:ring-2 focus:ring-offset-2 ${\n              isActive ? 'focus:ring-red-500' : 'focus:ring-indigo-500'\n            } ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            {isLoading ? (\n              <svg className=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n            ) : (\n              <>\n                {isActive ? 'Stop Conversation' : 'Start Conversation'}\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConversationInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}